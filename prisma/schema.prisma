generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId  Int    @id @default(autoincrement()) @map("USER_ID")
  name    String @default("unknown name") @map("NAME") @db.VarChar(10)
  email   String @unique @map("EMAIL") @db.VarChar(50)
  profile String @map("PROFILE") @db.Text

  posts    Post[]    @relation("USER_HAVE_MANY_POST")
  userInfo UserInfo? @relation("USER_DETAIL_INFO")

  @@map("USER")
}

model Post {
  postId   Int    @id @default(autoincrement()) @map("POST_ID")
  content  String @map("CONTENT") @db.Text
  writerId Int    @map("WRITER_ID")

  writer User @relation("USER_HAVE_MANY_POST", fields: [writerId], references: [userId])

  @@map("POST")
}

// 1. user info 상세정보 테이블 대문자 스네이크 케이스로 만들기 
// 2. 키 int, 몸무게 int, 주소 text, 폰 번호 char, 가입일자 Datetime 넣기
// 2. USER 와 1대1 관계 맺기 (관계 이름 도메인은 대문자 스네이크로 user detail info 로)

model UserInfo {
  userId    Int      @id @map("USER_ID")
  height    String   @map("HEIGHT") @db.Char(3)
  weight    Int      @map("WEIGHT") @db.Integer
  address   String   @map("ADR") @db.Text
  createdAt DateTime @default(now()) @db.Timestamptz()

  user User @relation("USER_DETAIL_INFO", fields: [userId], references: [userId], onDelete: Cascade)

  @@map("USER_INFO")
}
